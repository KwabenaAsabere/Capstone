# Chunk 90
prepare_data <- function(data, group_var) {
grouped_data <- data %>%
group_by({{ group_var }}) %>%
summarise(
n_b4 = sum(any_disruption_b4, na.rm = TRUE),
total_b4 = n(),
n_after = sum(any_disruption_after, na.rm = TRUE),
total_after = n(),
.groups = "drop"
) %>%
mutate(
proportion_b4 = n_b4 / total_b4,
proportion_after = n_after / total_after,
se_b4 = sqrt(proportion_b4 * (1 - proportion_b4) / total_b4),
se_after = sqrt(proportion_after * (1 - proportion_after) / total_after),
lower_b4 = proportion_b4 - 1.96 * se_b4,
upper_b4 = proportion_b4 + 1.96 * se_b4,
lower_after = proportion_after - 1.96 * se_after,
upper_after = proportion_after + 1.96 * se_after
) %>%
pivot_longer(
cols = starts_with("proportion"),
names_to = "time",
values_to = "proportion"
) %>%
mutate(
time = if_else(time == "proportion_b4", "Before Covid-19", "After Covid-19"),
lower = if_else(time == "Before Covid-19", lower_b4, lower_after),
upper = if_else(time == "Before Covid-19", upper_b4, upper_after)
) %>%
select({{ group_var }}, time, proportion, lower, upper)
total_data <- data %>%
summarise(
n_b4 = sum(any_disruption_b4, na.rm = TRUE),
total_b4 = n(),
n_after = sum(any_disruption_after, na.rm = TRUE),
total_after = n(),
.groups = "drop"
) %>%
mutate(
proportion_b4 = n_b4 / total_b4,
proportion_after = n_after / total_after,
se_b4 = sqrt(proportion_b4 * (1 - proportion_b4) / total_b4),
se_after = sqrt(proportion_after * (1 - proportion_after) / total_after),
lower_b4 = proportion_b4 - 1.96 * se_b4,
upper_b4 = proportion_b4 + 1.96 * se_b4,
lower_after = proportion_after - 1.96 * se_after,
upper_after = proportion_after + 1.96 * se_after
) %>%
pivot_longer(
cols = starts_with("proportion"),
names_to = "time",
values_to = "proportion"
) %>%
mutate(
time = if_else(time == "proportion_b4", "Before Covid-19", "After Covid-19"),
lower = if_else(time == "Before Covid-19", lower_b4, lower_after),
upper = if_else(time == "Before Covid-19", upper_b4, upper_after),
{{ group_var }} := "Total" # Add "Total" to the group variable
) %>%
select({{ group_var }}, time, proportion, lower, upper)
bind_rows(grouped_data, total_data)
}
# Chunk 91
summary_by_sex <- prepare_data(df_disruption, sex)
summary_by_age <- prepare_data(df_disruption, age_cat)
summary_by_mobility <- prepare_data(df_disruption, mobility)
summary_by_community <- prepare_data(df_disruption, community_type)
summary_by_art_duration <- prepare_data(df_disruption,art_duration)
# Chunk 92
summary_by_age <-  summary_by_age %>%
mutate(age_cat = as_factor(age_cat) %>%
fct_relevel("<30","30-39","40-49"),
time = as_factor(time) %>%
fct_relevel("Before Covid-19"))
# Chunk 93
summary_by_community <-  summary_by_community %>%
mutate(
time = as_factor(time) %>%
fct_relevel("Before Covid-19"),
community_type = as_factor(community_type) %>%
fct_relevel("Fishing community")
)
# Chunk 94
summary_by_mobility <-  summary_by_mobility %>%
mutate(
time = as_factor(time) %>%
fct_relevel("Before Covid-19"),
mobility = as_factor(mobility) %>%
fct_relevel("In-migrant","Long-term resident")
)
# Chunk 95
summary_by_sex <-  summary_by_sex %>%
mutate(
time = as_factor(time) %>%
fct_relevel("Before Covid-19"),
sex = as_factor(sex) %>%
fct_relevel("Female","Male")
)
# Chunk 96
summary_by_art_duration <-  summary_by_art_duration %>%
mutate(
time = as_factor(time) %>%
fct_relevel("Before Covid-19"),
art_duration = as_factor(art_duration) %>%
fct_relevel("<2 years","2-5 years", ">5 years","Total")
)
# Chunk 97
pr1 <- summary_by_sex %>%
ggplot(aes(x = sex, y = proportion, fill = time)) +
geom_col(position = position_dodge(width = 0.7), width = 0.5) +
geom_errorbar(
aes(ymin = lower, ymax = upper),
position = position_dodge(width = 0.7),
width = 0.2,
size = 1
) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0, 0.20)) +
labs(
title = "Any Disruption",
x = "Sex",
y = "Proportion of individuals",
fill = "Time"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
axis.title.x = element_text(face = "bold", size = 10),
axis.title.y = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10),
legend.text = element_text(size = 10),
legend.position = c(0, 1),
legend.justification = c(0, 1),
legend.direction = "horizontal"
)
pr1
# Chunk 98
pr2 <- summary_by_community %>%
ggplot(aes(x = community_type, y = proportion, fill = time)) +
geom_col(position = position_dodge(width = 0.7), width = 0.5) +
geom_errorbar(
aes(ymin = lower, ymax = upper),
position = position_dodge(width = 0.7),
width = 0.2,
size = 1
) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0, 0.25)) +
labs(
title = "Any Disruption",
x = "Community Type",
y = "Proportion of individuals",
fill = "Time"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
axis.title.x = element_text(face = "bold", size = 10),
axis.title.y = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10),
legend.text = element_text(size = 10),
legend.position = c(0, 1),
legend.justification = c(0, 1),
legend.direction = "horizontal"
)
pr2
# Chunk 99
pr3 <- summary_by_age %>%
ggplot(aes(x = age_cat, y = proportion, fill = time)) +
geom_col(position = position_dodge(width = 0.7), width = 0.5) +
geom_errorbar(
aes(ymin = lower, ymax = upper),
position = position_dodge(width = 0.7),
width = 0.2,
size = 1
) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0, 0.25)) +
labs(
title = "Any Disruption",
x = "Age Category",
y = "Proportion of individuals",
fill = "Time"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 10),
axis.title.y = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10),
legend.text = element_text(size = 10),
legend.position = c(0, 1),
legend.justification = c(0, 1),
legend.direction = "horizontal"
)
pr3
# Chunk 100
pr4 <- summary_by_mobility %>%
ggplot(aes(x = mobility, y = proportion, fill = time)) +
geom_col(position = position_dodge(width = 0.7), width = 0.5) +
geom_errorbar(
aes(ymin = lower, ymax = upper),
position = position_dodge(width = 0.7),
width = 0.2,
size = 1
) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0, 0.26)) +
labs(
title = "Any Disruption",
x = "Mobility",
y = "Proportion of individuals",
fill = "Time"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
axis.title.x = element_text(face = "bold", size = 10),
axis.title.y = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10),
legend.text = element_text(size = 10),
legend.position = c(0, 1),
legend.justification = c(0, 1),
legend.direction = "horizontal"
)
pr4
# Chunk 101
pr5 <- summary_by_art_duration %>%
ggplot(aes(x = art_duration, y = proportion, fill = time)) +
geom_col(position = position_dodge(width = 0.7), width = 0.5) +
geom_errorbar(
aes(ymin = lower, ymax = upper),
position = position_dodge(width = 0.7),
width = 0.2,
size = 1
) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0, 0.25)) +
labs(
title = "Any Disruption",
x = "ART Duration",
y = "Proportion of individuals",
fill = "Time"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
axis.title.x = element_text(face = "bold", size = 10),
axis.title.y = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10),
legend.text = element_text(size = 10),
legend.position = c(0, 1),
legend.justification = c(0, 1),
legend.direction = "horizontal"
)
pr5
# Chunk 102
#| fig-width: 10
#| fig-height: 10
### Combined plot
(pa1 + pa2)/(pa3 + pr3)
# Chunk 103
#| fig-width: 10
#| fig-height: 10
### Combined plot
(pc1 + pc2)/(pc2 + pr2)
# Chunk 104
#| fig-width: 10
#| fig-height: 10
### Combined plot
(pm1 + pm2)/(pm3 +pr4)
# Chunk 105
#| fig-width: 10
#| fig-height: 10
### Combined plot
(pd1 + pd2)/(pd3 + pr5)
# Chunk 106
#| fig-width: 10
#| fig-height: 10
### Combined plot
(ps1 + ps2)/(ps3 + pr1)
# Chunk 107
df_rakai_reg <- rakai %>%
select(ageyrs,sex,mobility,arthoac,artrunac,artstrac,
artyrs,comm_num,artrunbc,artstrbc,hivac,hivbc,copies,new_copies) %>%
filter(copies != "INV.IC ",!is.na(copies),!is.na(new_copies)) %>%
mutate(
copies = str_remove_all(copies, "<\\s*"),
copies = if_else(copies == "BD", "0", copies),
copies = as.numeric(copies),
new_copies = str_remove_all(new_copies, "<\\s*"),
new_copies = if_else(new_copies == "BD", "0", new_copies),
new_copies = as.numeric(new_copies)
) %>%
mutate(viral_load_b4 = if_else(copies < 200, "Viral Load Sppression","Viraemia") %>%
ff_label("HIV RNA viral load, in copies/ml"),
viral_load_after = if_else(new_copies < 200,"Viral Load Sppression","Viraemia") %>%
ff_label("HIV RNA viral load, in copies/ml")) %>%
mutate(
suppbc = if_else(viral_load_b4 == "Viral Load Suppression", 1, 0),
suppac = if_else(viral_load_after == "Viral Load Suppression", 1, 0)
) %>%
mutate(
age_cat = case_when(
ageyrs < 30 ~ "<30",
ageyrs >= 30 & ageyrs <= 39 ~  "30-39",
ageyrs >=40 & ageyrs <= 49 ~ "40-49") %>%
fct_relevel("<30") %>%
ff_label("Age group"),
sex = if_else(sex == "F","Female","Male") %>%
as_factor() %>%
fct_relevel("Female") %>%
ff_label("Sex"),
mobility = case_when(
mobility %in% c(3,8,10) ~ "In-migrant",
.default = "Long-term resident") %>%
fct_relevel("In-migrant") %>%
ff_label("Migration"),
community_type = case_when(
comm_num %in% c(38,770,771,774) ~ "Fishing community",
.default = "Inland Community") %>%
fct_relevel("Inland Community") %>%
ff_label("Community type"),
fishing_comm = if_else(community_type == "Fishing Community",1,0) %>%
ff_label("Lake Victoria Fishing Community"),
art_duration = case_when(
artyrs >= 2 &  artyrs <= 5 ~ "2-5 years",
artyrs > 5 ~ ">5 years",
.default =  "<2 years"
) %>%
fct_relevel("<2 years","2-5 years") %>%
ff_label("Time on ART"),
hivac = if_else(hivac == 1, 1, 0) %>%
ff_label("Missed scheduled Visit"),
hivbc = if_else(hivbc == 1, 1, 0) %>%
ff_label("Missed Scheduled Visit"),
artrunac = if_else(artrunac == 1, 1, 0) %>%
ff_label("Run out of ARTl"),
artrunbc = if_else(artrunbc == 1, 1, 0) %>%
ff_label("Run out of ART"),
artstrac = if_else(artstrac == 1, 1, 0) %>%
ff_label("Reduced ART Intake"),
artstrbc = if_else(artstrbc == 1, 1, 0) %>%
ff_label("Reduced ART Intake"),
)
# Chunk 108
df_viraemia <-   df_rakai_reg %>%
select(sex,age_cat,mobility,community_type,art_duration,
hivbc,artrunbc,artstrbc,hivac,artrunac,artstrac,viral_load_b4,
viral_load_after,suppbc,suppac) %>%
mutate(any_disruption_b4 = if_else(rowSums(across(hivbc:artrunbc),na.rm = TRUE) > 0,1,0) %>%
ff_label("Any ART Disruption"),
any_disruption_after = if_else(rowSums(across(hivac:artstrac),na.rm = TRUE) > 0,1,0)%>%
ff_label("Any ART Disruption"))
# Chunk 109
df_viraemia <-  df_viraemia %>%
mutate(
viraemia_after_covid = if_else(viral_load_after == "Viraemia","Yes","No") %>%
fct_relevel("Yes") %>%
ff_label("Viraemia"),
viraemia_after_dum = if_else(viral_load_after == "Viraemia",1,0) %>%
ff_label("Viraemia"),
viraemia_b4_covid = if_else(viral_load_b4 == "Viraemia","Yes","No") %>%
fct_relevel("Yes") %>%
ff_label("Viraemia"),
viraemia_b4_dum = if_else(viral_load_b4 == "Viraemia",1,0) %>%
ff_label("Viraemia"),
art_disruption_b4 = if_else(any_disruption_b4 == 1,"Yes","No") %>%
fct_relevel("Yes") %>%
ff_label("Any ART Disruption"),
art_disruption_after = if_else(any_disruption_after == 1,"Yes","No") %>%
fct_relevel("Yes") %>%
ff_label("Any ART Disruption")
)
# Chunk 110
library(epiR)
# Create 2x2 table
table_2x2 <- table(
df_viraemia$art_disruption_after,
df_viraemia$viraemia_after_covid
)
# Calculate prevalence ratio and confidence intervals
epi.2by2(table_2x2, method = "cohort.count", conf.level = 0.95)
# Chunk 111
# Fit Poisson regression model with robust standard errors
pr_model <- glm(
any_disruption_after ~ viraemia_after_dum,
data = df_viraemia,
family = poisson(link = "log")
)
# Calculate robust standard errors
robust_se <- sandwich::vcovHC(pr_model, type = "HC0")
pr_model_robust <- lmtest::coeftest(pr_model, vcov = robust_se)
# Extract prevalence ratio and confidence intervals
pr_table <- broom::tidy(pr_model, exponentiate = TRUE, conf.int = TRUE)
# Chunk 112
cross_table <- df_viraemia %>%
tbl_cross(
row = viraemia_after_dum,  # Explanatory variable
col = any_disruption_after,  # Outcome variable
percent = "row",
margin = NULL  # Suppress row and column totals
) %>%
add_stat_label() %>%
modify_table_body(
~ .x %>%
# Add prevalence ratios (PR) and CIs as columns
mutate(
label = case_when(
label == "0" ~ "No",  # Recode 0 as No
label == "1" ~ "Yes",  # Recode 1 as Yes
TRUE ~ label
),
PR = case_when(
label == "Yes" ~ sprintf("%.2f", pr_table$estimate[2]),  # PR for viraemia_after_dum = 1 (Yes)
TRUE ~ NA_character_
),
CI = case_when(
label == "Yes" ~ sprintf("(%.2f–%.2f)", pr_table$conf.low[2], pr_table$conf.high[2]),
TRUE ~ NA_character_
)
)
) %>%
modify_header(
stat_1 ~ "**No**",  # Rename the first column to No
stat_2 ~ "**Yes**",  # Rename the second column to Yes
PR ~ "**Prevalence Ratio**",
CI ~ "**95% Confidence Interval**"
) %>%
modify_caption("**Cross-Tabulation with Prevalence Ratios and Confidence Intervals**")
cross_table <- df_viraemia %>%
tbl_cross(
row = viraemia_after_dum,  # Explanatory variable
col = any_disruption_after,  # Outcome variable
percent = "row",
margin = NULL  # Suppress row and column totals
) %>%
add_stat_label() %>%
modify_table_body(
~ .x %>%
mutate(
label = case_when(
label == "0" ~ "No",  # Recode 0 as No
label == "1" ~ "Yes",  # Recode 1 as Yes
TRUE ~ label
),
PR = ifelse(label == "Yes", sprintf("%.2f", pr_table$estimate[2]), NA_character_),
CI = ifelse(label == "Yes", sprintf("(%.2f–%.2f)", pr_table$conf.low[2], pr_table$conf.high[2]), NA_character_)
)
) %>%
modify_header(
stat_1 ~ "**No**",  # Rename the first column to No
stat_2 ~ "**Yes**",  # Rename the second column to Yes
PR ~ "**Prevalence Ratio**",
CI ~ "**95% Confidence Interval**"
) %>%
modify_caption("**Cross-Tabulation with Prevalence Ratios and Confidence Intervals**")
cross_table <- df_viraemia %>%
tbl_cross(
row = viraemia_after_dum,  # Explanatory variable
col = any_disruption_after,  # Outcome variable
percent = "row",
margin = NULL  # Suppress row and column totals
) %>%
add_stat_label() %>%
modify_table_body(
~ .x %>%
mutate(
label = case_when(
label == "0" ~ "No",  # Recode 0 as No
label == "1" ~ "Yes",  # Recode 1 as Yes
TRUE ~ label
),
PR = ifelse(label == "Yes", sprintf("%.2f", pr_table$estimate[2]), NA_character_),
CI = ifelse(label == "Yes", sprintf("(%.2f–%.2f)", pr_table$conf.low[2], pr_table$conf.high[2]), NA_character_)
)
) %>%
modify_header(
stat_1 ~ "**No**",  # Rename the first column to No
stat_2 ~ "**Yes**",  # Rename the second column to Yes
PR ~ "**Prevalence Ratio**",
CI ~ "**95% Confidence Interval**"
) %>%
modify_caption("**Cross-Tabulation with Prevalence Ratios and Confidence Intervals**")
library(tidyverse)
library(finalfit)
library(gtsummary)
library(patchwork)
cross_table <- df_viraemia %>%
tbl_cross(
row = viraemia_after_dum,  # Explanatory variable
col = any_disruption_after,  # Outcome variable
percent = "row",
margin = NULL  # Suppress row and column totals
) %>%
add_stat_label() %>%
modify_table_body(
~ .x %>%
mutate(
label = case_when(
label == "0" ~ "No",  # Recode 0 as No
label == "1" ~ "Yes",  # Recode 1 as Yes
TRUE ~ label
),
PR = ifelse(label == "Yes", sprintf("%.2f", pr_table$estimate[2]), NA_character_),
CI = ifelse(label == "Yes", sprintf("(%.2f–%.2f)", pr_table$conf.low[2], pr_table$conf.high[2]), NA_character_)
)
) %>%
modify_header(
stat_1 ~ "**No**",  # Rename the first column to No
stat_2 ~ "**Yes**",  # Rename the second column to Yes
PR ~ "**Prevalence Ratio**",
CI ~ "**95% Confidence Interval**"
) %>%
modify_caption("**Cross-Tabulation with Prevalence Ratios and Confidence Intervals**")
