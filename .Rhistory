term == "sexMale" ~ "Sex (Male vs Female)",
term == "age_cat<30" ~ "Age: <30 vs 40-49",
term == "age_cat30-39" ~ "Age: 30-39 vs 40-49",
term == "mobilityLong-term resident" ~ "Mobility (Long-term Resident)",
term == "community_typeFishing community" ~ "Community Type (Fishing)",
term == "art_duration2-5 years" ~ "ART Duration: 2-5 years",
term == "art_duration>5 years" ~ "ART Duration: >5 years",
term == "viraemia_b4_dum" ~ "Viraemia before Covid",
TRUE ~ term
)) %>%
arrange(desc(estimate))
viraemia_forest_df
# Chunk 6
ggplot(viraemia_forest_df, aes(x = term, y = estimate, color = model)) +
geom_point(position = position_dodge(width = 0.5), size = 2) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(width = 0.5), width = 0.2) +
geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
coord_flip() +  # Flip coordinates for better readability
scale_color_manual(values = c("Unadjusted" = "blue", "Adjusted" = "red")) +
labs(title = "Forest Plot of Prevalence Ratios",
x = "Variables",
y = "Prevalence Ratio (95% CI)",
color = "Model Type") +
theme_minimal(base_size = 14)
# Chunk 7
model_viraemia_sex <- df_viraemia %>%
group_by(sex) %>%
nest() %>%
mutate(
model = map(data, ~ glm.nb(viraemia_after_dum ~ any_disruption_after +
any_disruption_b4 + age_cat + mobility +
community_type + art_duration,
data = .x)),
results = map(model, ~ tidy(.x, exponentiate = TRUE, conf.int = TRUE))
) %>%
unnest(cols = results) %>%
select(sex, term, estimate, conf.low, conf.high) %>%
mutate(across(where(is.numeric), \(x) round(x, 2)))  %>%
dplyr:: filter(term != "(Intercept)")
# Chunk 8
sex_forest_df <- model_viraemia_sex %>%
mutate(term = case_when(
term == "any_disruption_after" ~ "ART Disruption After (Yes)",
term == "any_disruption_b4" ~ "ART Disruption Before (Yes)",
term == "sexMale" ~ "Sex (Male vs Female)",
term == "age_cat<30" ~ "Age: <30 vs 40-49",
term == "age_cat30-39" ~ "Age: 30-39 vs 40-49",
term == "mobilityLong-term resident" ~ "Mobility (Long-term Resident)",
term == "community_typeFishing community" ~ "Community Type (Fishing)",
term == "art_duration2-5 years" ~ "ART Duration: 2-5 years",
term == "art_duration>5 years" ~ "ART Duration: >5 years",
term == "viraemia_b4_dum" ~ "Viraemia before Covid",
TRUE ~ term
)) %>%
arrange(desc(estimate))
sex_forest_df
# Chunk 9
ggplot(sex_forest_df, aes(x = term, y = estimate, color = sex)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(width = 0.5), width = 0.2) +
geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
coord_flip() +
labs(
title = "Prevalence Ratios by Sex",
x = "Variables",
y = "Prevalence Ratio of Viraemia after Covid-19 By Sex"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
axis.text = element_text(face = "bold", size = 10),
axis.title = element_text(face = "bold", size = 10),
legend.text = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10)
)
# Chunk 10
model_disruption_multivariate <- df_viraemia %>%
glm.nb(any_disruption_after ~ any_disruption_b4 + sex +
age_cat+ mobility+community_type + art_duration + viraemia_b4_dum, data = .)
disruption_multivariate_df <- model_disruption_multivariate %>%
tidy(exponentiate = TRUE,conf.int = TRUE) %>%
mutate(model = "Adjusted") %>%
select(term,model,estimate,conf.low,conf.high) %>%
mutate(across(where(is.numeric), \(x) round(x, 2)))  %>%
dplyr:: filter(term != "(Intercept)")
disruption_multivariate_df
# Chunk 11
explanatory_vars <-  c("any_disruption_b4","sex","age_cat","mobility","community_type","art_duration","viraemia_b4_dum")
dependent_var <- "art_disruption_after"
# Chunk 12
disruption_univariate_df <-  explanatory_vars %>%
str_c("any_disruption_after ~ ", .) %>%
map(
.f = ~glm.nb(
formula = as.formula(.x),
data = df_viraemia)
) %>%
map(
.f = ~tidy(.x, exponentiate = TRUE, conf.int = TRUE)
) %>%
bind_rows() %>%
mutate(across(where(is.numeric), \(x) round(x,2)),
model = "Unadjusted") %>%
filter(term != "(Intercept)") %>%
select(term,model,estimate,conf.low,conf.high)
disruption_univariate_df
# Chunk 13
disruption_forest_df <- bind_rows(disruption_univariate_df,disruption_multivariate_df)%>%
mutate(term = case_when(
term == "any_disruption_after" ~ "ART Disruption After (Yes)",
term == "any_disruption_b4" ~ "ART Disruption Before (Yes)",
term == "sexMale" ~ "Sex (Male vs Female)",
term == "age_cat<30" ~ "Age: <30 vs 40-49",
term == "age_cat30-39" ~ "Age: 30-39 vs 40-49",
term == "mobilityLong-term resident" ~ "Mobility (Long-term Resident)",
term == "community_typeFishing community" ~ "Community Type (Fishing)",
term == "art_duration2-5 years" ~ "ART Duration: 2-5 years",
term == "art_duration>5 years" ~ "ART Duration: >5 years",
term == "viraemia_b4_dum" ~ "Viraemia before Covid",
TRUE ~ term
)) %>%
arrange(desc(estimate))
disruption_forest_df
# Chunk 14
ggplot(disruption_forest_df, aes(x = term, y = estimate, color = model)) +
geom_point(position = position_dodge(width = 0.5), size = 2) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(width = 0.5), width = 0.2) +
geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
coord_flip() +
scale_color_manual(values = c("Unadjusted" = "blue", "Adjusted" = "red")) +
labs(
# title = "Forest Plot of Prevalence Ratios",
x = " ",
y = "Prevalence Risk Ratio of Any ART Disruption after Covid-19",
color = " "
) +
theme_minimal(base_size = 10) +
theme(
legend.position = "bottom",
axis.text = element_text(face = "bold", size = 10),
axis.title = element_text(face = "bold", size = 10),
legend.text = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10)
)
# Chunk 15
ggplot(viraemia_forest_df, aes(x = term, y = estimate, color = model)) +
geom_point(position = position_dodge(width = 0.5), size = 2) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(width = 0.5), width = 0.2) +
geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
coord_flip() +
scale_y_continuous(breaks = c(1:max(viraemia_forest_df$conf.high + 1)),
limits = c(0, max(viraemia_forest_df$conf.high) + 2))+
scale_color_manual(values = c("Unadjusted" = "blue", "Adjusted" = "red")) +
labs(
# title = "Forest Plot of Prevalence Ratios",
x = " ",
y = "Prevalence Risk Ratio of Viraemia after Covid-19",
color = " "
) +
theme_minimal(base_size = 10) +
theme(
legend.position = "bottom",
axis.text = element_text(face = "bold", size = 10),
axis.title = element_text(face = "bold", size = 10),
legend.text = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10)
)
# Chunk 16
ggplot(disruption_forest_df, aes(x = term, y = estimate, color = model)) +
geom_point(position = position_dodge(width = 0.5), size = 2) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(width = 0.5), width = 0.2) +
geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
coord_flip() +
scale_y_continuous(breaks = c(1:max(disruption_forest_df$conf.high + 1)),
limits = c(0, max(disruption_forest_df$conf.high) + 2))+
scale_color_manual(values = c("Unadjusted" = "blue", "Adjusted" = "red")) +
labs(
# title = "Forest Plot of Prevalence Ratios",
x = " ",
y = "Prevalence Risk Ratio of Any ART Disruption after Covid-19",
color = " "
) +
theme_minimal(base_size = 10) +
theme(
legend.position = "bottom",
axis.text = element_text(face = "bold", size = 10),
axis.title = element_text(face = "bold", size = 10),
legend.text = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10)
)
# Chunk 17
ggplot(sex_forest_df, aes(x = term, y = estimate, color = sex)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(width = 0.5), width = 0.2) +
geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
coord_flip() +
scale_y_continuous(breaks = c(1:max(sex_forest_df$conf.high)),
limits = c(0, max(sex_forest_df$conf.high) + 1)) +
labs(
#title = "Prevalence Ratios by Sex",
x = "",
y = "Prevalence Risk Ratio of Viraemia after Covid-19 By Sex",
color = ""
) +
theme_minimal(base_size = 10) +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
axis.text = element_text(face = "bold", size = 10),
axis.title = element_text(face = "bold", size = 10),
legend.text = element_text(face = "bold", size = 10),
legend.title = element_text(face = "bold", size = 10)
)
univariate_table <- df_viraemia %>%
select(all_of(dependent_var), all_of(explanatory_vars)) %>%
tbl_uvregression(
method = glm.nb,  # Fit univariate Negative Binomial models
y = art_disruption_after,  # Dependent variable
method.args = list(),  # Additional arguments (optional)
exponentiate = TRUE  # Convert log coefficients to prevalence risk ratios
) %>%
bold_p(t = 0.05) %>%  # Bold significant p-values
modify_header(label = "**Variable**") %>%  # Rename first column
modify_spanning_header(everything() ~ "**Univariate Negative Binomial Regression**")  # Table title
df_viraemia <- read_rds("df_viraemia.rds") %>%
drop_na()
univariate_table <- df_viraemia %>%
select(all_of(dependent_var), all_of(explanatory_vars)) %>%
tbl_uvregression(
method = glm.nb,  # Fit univariate Negative Binomial models
y = art_disruption_after,  # Dependent variable
method.args = list(),  # Additional arguments (optional)
exponentiate = TRUE  # Convert log coefficients to prevalence risk ratios
) %>%
bold_p(t = 0.05) %>%  # Bold significant p-values
modify_header(label = "**Variable**") %>%  # Rename first column
modify_spanning_header(everything() ~ "**Univariate Negative Binomial Regression**")  # Table title
univariate_table <- df_viraemia %>%
select(all_of(dependent_var), all_of(explanatory_vars)) %>%
tbl_uvregression(
method = glm.nb,  # Fit univariate Negative Binomial models
y = art_disruption_after,  # Dependent variable
method.args = list(),  # Additional arguments (optional)
exponentiate = TRUE  # Convert log coefficients to prevalence risk ratios
) %>%
bold_p(t = 0.05) %>%  # Bold significant p-values
modify_header(label = "**Variable**")   # Rename first column
univariate_table <- df_viraemia %>%
select(all_of(dependent_var), all_of(explanatory_vars)) %>%
tbl_uvregression(
method = glm.nb,  # Fit univariate Negative Binomial models
y = art_disruption_after,  # Dependent variable
method.args = list(),  # Additional arguments (optional)
exponentiate = TRUE  # Convert log coefficients to prevalence risk ratios
) %>%
bold_p(t = 0.05) %>%  # Bold significant p-values
modify_header(label = "**Variable**") %>%   # Rename first column
modify_spanning_header(everything() ~ "**Univariate Negative Binomial Regression**")  # Table title
df_viraemia %>%
select(any_disruption_b4,any_disruption_after,sex,age_cat,
mobility,community_type,art_duration,viraemia_after_dum) %>%
tbl_uvregression(
method = glm.nb,  # Fit univariate Negative Binomial models
y = art_disruption_after,  # Dependent variable
method.args = list(),  # Additional arguments (optional)
exponentiate = TRUE  # Convert log coefficients to prevalence risk ratios
) %>%
bold_p(t = 0.05) %>%  # Bold significant p-values
modify_header(label = "**Variable**") %>%   # Rename first column
modify_spanning_header(everything() ~ "**Univariate Negative Binomial Regression**")  # Table title
df_viraemia %>%
select(any_disruption_b4,any_disruption_after,sex,age_cat,
mobility,community_type,art_duration,viraemia_after_dum) %>%
tbl_uvregression(
method = glm.nb,
y = art_disruption_after,
method.args = list(),
exponentiate = TRUE
) %>%
bold_p(t = 0.05) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(everything() ~ "**Univariate Negative Binomial Regression**")  # Table title
df_viraemia %>%
select(any_disruption_b4,any_disruption_after,sex,age_cat,
mobility,community_type,art_duration,viraemia_after_dum) %>%
tbl_uvregression(
method = glm.nb,
y = any_disruption_after,
method.args = list(),
exponentiate = TRUE
) %>%
bold_p(t = 0.05) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(everything() ~ "**Univariate Negative Binomial Regression**")  # Table title
View(disruption_univariate_df)
df_viraemia %>%
select(any_disruption_b4,any_disruption_after,sex,age_cat,
mobility,community_type,art_duration,viraemia_after_dum) %>%
tbl_summary()
df_viraemia %>%
select(any_disruption_b4,any_disruption_after,sex,age_cat,
mobility,community_type,art_duration,viraemia_after_dum) %>%
tbl_summary( by = any_disruption_after)
df_viraemia %>%
select(art_disruption_b4,any_disruption_after,sex,age_cat,
mobility,community_type,art_duration,viraemia_after_dum) %>%
tbl_summary( by = any_disruption_after)
df_viraemia %>%
select(any_disruption_b4,any_disruption_after,sex,age_cat,
mobility,community_type,art_duration,viraemia_after_dum) %>%
tbl_uvregression(
method = glm.nb,
y = any_disruption_after,
method.args = list(),
exponentiate = TRUE
) %>%
bold_p(t = 0.05) %>%
modify_header(label = "**Variable**") %>%
modify_spanning_header(everything() ~ "**Univariate Negative Binomial Regression**")
model_disruption_multivariate %>%
tbl_regression(exponentiate = TRUE,conf.int = TRUE)
model_viraemia_sex
library(flextable)  # For Word document formatting
# Reformat data: Arrange terms together for both sexes
publication_table <- sex_forest_df %>%
arrange(term, sex) %>%  # Ensure Male and Female results for each term are together
mutate(
PRR_CI = paste0(estimate, " (", conf.low, " - ", conf.high, ")")  # Combine PRR & CI
) %>%
select(term, sex, PRR_CI) %>%  # Keep only necessary columns
pivot_wider(names_from = sex, values_from = PRR_CI)  # Spread Male and Female columns
# Print the cleaned table
publication_table
publication_table <- sex_forest_df %>%
arrange(term, sex) %>%
mutate(
PRR_CI = paste0(estimate, " (", conf.low, " - ", conf.high, ")")
) %>%
select(term, sex, PRR_CI) %>%
pivot_wider(names_from = sex, values_from = PRR_CI)
publication_table
publication_table %>%
gt() %>%
tab_header(
title = "Prevalence Risk Ratios by Sex",
subtitle = "Comparison of Univariate Negative Binomial Models"
) %>%
cols_label(
term = "Variable",
Female = "Female PRR (95% CI)",
Male = "Male PRR (95% CI)"
) %>%
tab_options(table.font.names = "Times New Roman") %>%
fmt_number(columns = 2:3, decimals = 2) %>%
opt_table_lines()
publication_table %>%
gt() %>%
tab_header(
title = "Prevalence Risk Ratios by Sex",
#subtitle = "Comparison of Univariate Negative Binomial Models"
) %>%
cols_label(
term = "Variable",
Female = "Female PRR (95% CI)",
Male = "Male PRR (95% CI)"
) %>%
tab_options(table.font.names = "Times New Roman") %>%
fmt_number(columns = 2:3, decimals = 2) %>%
opt_table_lines()
sex_viraemia_table <- sex_forest_df %>%
arrange(term, sex) %>%
mutate(
PRR_CI = paste0(estimate, " (", conf.low, " - ", conf.high, ")")
) %>%
select(term, sex, PRR_CI) %>%
pivot_wider(names_from = sex, values_from = PRR_CI)
sex_viraemia_table %>%
gt() %>%
tab_header(
title = "Prevalence Risk Ratios by Sex",
#subtitle = "Comparison of Univariate Negative Binomial Models"
) %>%
cols_label(
term = "Variable",
Female = "Female PRR (95% CI)",
Male = "Male PRR (95% CI)"
) %>%
tab_options(table.font.names = "Times New Roman") %>%
fmt_number(columns = 2:3, decimals = 2) %>%
opt_table_lines()
df_viraemia %>%
select(art_disruption_b4,any_disruption_after,sex,age_cat,
mobility,community_type,art_duration,viraemia_after_dum) %>%
tbl_summary( by = sex)
summary_table <- df_viraemia %>%
select(art_disruption_b4, any_disruption_after, sex, age_cat,
mobility, community_type, art_duration, viraemia_after_dum) %>%
tbl_summary(by = sex) %>%
bold_labels()
summary_table <- df_viraemia %>%
select(art_disruption_b4, any_disruption_after, sex, age_cat,
mobility, community_type, art_duration, viraemia_after_dum) %>%
tbl_summary(by = sex) %>%
bold_labels() %>%
as_flextable()
summary_table
sex_viraemia_table %>%
gt() %>%
tab_header(
title = "Prevalence Risk Ratios by Sex",
#subtitle = "Comparison of Univariate Negative Binomial Models"
) %>%
cols_label(
term = "Variable",
Female = "Female PRR (95% CI)",
Male = "Male PRR (95% CI)"
) %>%
tab_options(table.font.names = "Times New Roman") %>%
fmt_number(columns = 2:3, decimals = 2) %>%
opt_table_lines()
summary_table <- df_viraemia %>%
select(art_disruption_b4, any_disruption_after, sex, age_cat,
mobility, community_type, art_duration, viraemia_after_dum) %>%
tbl_summary(by = sex) %>%
bold_labels() %>%
as_flextable()
summary_table <- df_viraemia %>%
select(art_disruption_b4, any_disruption_after, sex, age_cat,
mobility, community_type, art_duration, viraemia_after_dum) %>%
tbl_summary(by = sex) %>%
bold_labels() %>%
as_flextable()
summary_table
summary_table <- df_viraemia %>%
select(art_disruption_b4, any_disruption_after, sex, age_cat,
mobility, community_type, art_duration, viraemia_after_dum) %>%
tbl_summary(by = sex) %>%
bold_labels()
summary_table
sex_viraemia_table
sex_viraemia_table <- sex_forest_df %>%
arrange(term, sex) %>%
mutate(
PRR_CI = paste0(estimate, " (", conf.low, " - ", conf.high, ")")
) %>%
select(term, sex, PRR_CI) %>%
pivot_wider(names_from = sex, values_from = PRR_CI)
sex_viraemia_table %>%
gt() %>%
tab_header(
title = "Prevalence Risk Ratios by Sex",
#subtitle = "Comparison of Univariate Negative Binomial Models"
) %>%
cols_label(
term = "Variable",
Female = "Female PRR (95% CI)",
Male = "Male PRR (95% CI)"
) %>%
tab_options(table.font.names = "Times New Roman") %>%
fmt_number(columns = 2:3, decimals = 2) %>%
opt_table_lines()
sex_viraemia_table
adjusted_model_poisson
biostat <- read_rds("framingham.rds")
library(tidyverse)
library(broom)
library(finalfit)
library(MASS)
library(conflicted)
library(gtsummary)
library(gt)
library(flextable)
biostat <- read_rds("framingham.rds")
model1 <- biostat %>%
glm(D ~ gender + cursmoke + diabetes + bpmeds + bmicat + agecat + tbin,
offset = log(Y),
family = poisson(link = "log"),
data = .)
adjusted_model <- model1 %>%
tidy(exponentiate = TRUE,conf.int = TRUE)
adjusted_model
library(haven)
library(MASS)
library(tidyverse)
library(tidymodels)
library(haven)
library(finalfit)
library(gtsummary)
library(janitor)
nhnaes <- read_xpt("DEMO_J (1).xpt")
head(nhanes)
nhanes <- read_xpt("DEMO_J (1).xpt")
head(nhanes)
nhanes_demo <- read_xpt("DEMO_J (1).xpt")
nhanes_demo <- read_xpt("DEMO_J (1).xpt")
head(nhanes_demo)
View(nhanes_demo)
nhanes_bp <- read_xpt("BPX_J (1).xpt")
head(nhanes_bp)
# Select relevant variables from demography dataframe
nhanes_demo_main <- nhanes_demo %>%
select(RIDAGEYR,  # Age in years
RIAGENDR,  # Sex
RIDRETH1,  # Race/Ethnicity
INDFMPIR,  # Family income to poverty ratio
HIQ011)    # Health insurance status
